name: cheat
version: 'v3.2.1.build.1'
summary: cheat allows to create and view interactive cheatsheets on the command-line.
description: |
  cheat allows you to create and view interactive cheatsheets on the command-line. 
  It was designed to help remind *nix system administrators of options for commands 
  that they use frequently, but not frequently enough to remember.
  Source comes from https://github.com/cheat
  Bugreports go to: https://github.com/cheat/issues

grade: stable
confinement: strict
base: core18

layout:
  /bin/vi:
    symlink: $SNAP/bin/vim
  /usr/share/cheat:
    symlink: $SNAP/usr/share/cheat
  /etc/cheat/conf.yml:
    bind-file: $SNAP/etc/cheat/conf.yml

apps:
  cheat:
    environment:
      CHEAT_CONFIG_PATH: "/etc/cheat/conf.yml"
    command: cheat
    plugs: [home]

  vi:
    command: vim

  vim:
    command: vim

  nano:
    command: nano

architectures:
  - build-on: amd64

parts:
  cheat:
    plugin: dump
    source: .
    override-pull: |
      cd "$SNAPCRAFT_PART_SRC"
      curl -sSLO  https://github.com/cheat/cheat/releases/download/3.2.1/cheat-linux-amd64
      mv cheat-linux-amd64 cheat
      chmod +x cheat

      mkdir -p $SNAPCRAFT_PRIME/usr/share/cheat/cheatsheets
      if [ -d $SNAPCRAFT_PRIME/usr/share/cheat/cheatsheets/community ]; then
        cd $SNAPCRAFT_PRIME/usr/share/cheat/cheatsheets/community
        git fetch
        git pull
      else
        git clone https://github.com/cheat/cheatsheets $SNAPCRAFT_PRIME/usr/share/cheat/cheatsheets/community
      fi

      mkdir -p $SNAPCRAFT_PRIME/etc/cheat/
      cat << EOF > $SNAPCRAFT_PRIME/etc/cheat/conf.yml
      # The editor to use with 'cheat -e <sheet>'. Defaults to $EDITOR or $VISUAL.
      editor: vim

      # Should 'cheat' always colorize output?
      colorize: true

      # Which 'chroma' colorscheme should be applied to the output?
      # Options are available here:
      #   https://github.com/alecthomas/chroma/tree/master/styles
      style: monokai

      # Which 'chroma' "formatter" should be applied?
      # One of: "terminal", "terminal256", "terminal16m"
      formatter: terminal16m

      cheatpaths:
      # Paths that come earlier are considered to be the most "global", and will
      # thus be overridden by more local cheatsheets. That being the case, you
      # should probably list community cheatsheets first.
      #
      # Note that the paths and tags listed below are just examples. You may freely
      # change them to suit your needs.
        - name: community
          path: /usr/share/cheat/cheatsheets/community
          tags: [ community ]
          readonly: true
      # If you have personalized cheatsheets, list them last. They will take
      # precedence over the more global cheatsheets.
        - name: personal
          path: ~/cheat/cheatsheets/personal
          tags: [ personal ]
          readonly: false
      EOF
    build-packages:
        - curl

  vim:
    source: https://github.com/vim/vim.git
    source-depth: 1
    plugin: make
    override-build: |
      cd src
      ./configure --prefix=$SNAPCRAFT_PART_INSTALL
      make
      make install

  nano:
    source: https://www.nano-editor.org/dist/latest/nano-4.6.tar.gz
    source-type: tar
    plugin: make
    override-build: |
      ./configure --prefix=$SNAPCRAFT_PART_INSTALL
      make
      make install
    override-prime: |
      snapcraftctl prime
    build-packages:
      - gcc
      - libncurses5-dev
